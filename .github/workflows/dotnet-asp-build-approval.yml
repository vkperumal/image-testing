name: Dotnet ASP Base Image Approval

on:
  workflow_dispatch:

jobs:  
  build:
    name: Approve Base Image
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: dotnet-asp-base

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:unapproved 
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:unapproved $ECR_REGISTRY/$ECR_REPOSITORY:approved
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:approved

    - name: Install Cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v2.0.0'
      
    - name: Sign the image and push to ECR
      run: cosign sign --key ${{ secrets.AWS_KMS_KEY }} $ECR_REGISTRY/$ECR_REPOSITORY:approved
    
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
